Lecture- 72

Annotations - Default Bean Names ... and the Special Case


In general, when using Annotations, for the default bean name, Spring uses the following rule.

If the annotation's value doesn't indicate a bean name, an appropriate name will be built based
on the short name of the class (with the first letter lower-cased).

For example:

HappyFortuneService --> happyFortuneService

---

However, for the special case of when BOTH the first and second characters of the class name are
upper case, then the name is NOT converted.

For the case of RESTFortuneService

RESTFortuneService --> RESTFortuneService

No conversion since the first two characters are upper case.

Behind the scenes, Spring uses the Java Beans Introspector to generate the default bean name. Here's a screenshot
of the documentation for the key method.


Screenshot -> line 32-45

public static String decapitalize(String name)

Utility method to take a string and convert it to normal Java variable
name capitalization. This normally means converting the first character from
upper case to lower case, but in the (unusual) special case when there is more
than one character and both the first and second characters are upper case, we leave it alone.

Thus "FooBah" becomes "fooBah" and "X" becomes "x", but "URL" stays as "URL".

Parameters:
name - The string to be decapitalized.

Returns:
The decapitalized version of the string.




As always, you can specify a name for your bean.

@Component("foo")
public class RESTFortuneService .... {

}
Then you can access it using the name of "foo". Nothing tricky to worry about :-)

Hope this helps. Happy Coding! :-)
